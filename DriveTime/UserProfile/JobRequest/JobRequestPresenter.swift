//
//  JobRequestPresenter.swift
//  DriveTime
//
//  Created by Wing Sun Cheung on 9/18/18.
//  Copyright (c) 2018 Wing Sun Cheung. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol JobRequestPresentationLogic {
    func presentJobRequests(response: JobRequest.fetchJobRequest.Response)
    func presentJobRequestsError(error: JobRequestError)
    func presentFailedJobRequestAccept()
}

class JobRequestPresenter: JobRequestPresentationLogic {
    
    weak var viewController: JobRequestDisplayLogic?
    
    func presentFailedJobRequestAccept() {
        viewController?.displayErrorOnAcceptingJobRequest()
    }
    
    func presentRefreshJobRequestList() {
        viewController?.refreshJobRequestList()
    }
    
    func presentJobRequestsError(error: JobRequestError) {
        
        var message = ""
        
        switch error {
            
        case .FailedToFetchEmptyJobRequests :
            message = "There are currently no new jobs available"
            viewController?.displayEmptyJobRequestError(message: message)
        }
    }
    
    func presentJobRequests(response: JobRequest.fetchJobRequest.Response) {
        log.debug("sucessfully fetch job requests")
        
        guard let jobRequests = response.jobResponses else {
            return
        }
        
        let viewModels = jobRequests.map { (data) -> JobRequest.fetchJobRequest.ViewModel in
            return JobRequest.fetchJobRequest.ViewModel(id: data.id?.toString(), companyName: data.businessName, description: data.details, amountOffered: data.amountOffered, dropOffAddress: data.dropOffAddress, pickUpAddress: data.pickUpAddress, loadDescription: data.loadDescription)
        }
        
        viewController?.displayJobRequests(viewModel: viewModels)
        
    }
}

extension Int {
    func toString() -> String? {
        return "\(self)"
    }
}
